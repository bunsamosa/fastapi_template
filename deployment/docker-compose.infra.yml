services:
  redis-server:
    container_name: redis-server
    image: redis:alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/redis
    networks:
      - demo_network
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  rabbitmq-server:
    image: rabbitmq:4.0.5-management
    container_name: rabbitmq-server
    hostname: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_logs:/var/log/rabbitmq
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    environment:
      - RABBITMQ_USER
      - RABBITMQ_PASSWORD
      - RABBITMQ_VHOST
    networks:
      - demo_network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping && rabbitmq-diagnostics -q check_local_alarms"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

  nginx:
    container_name: nginx
    build:
      context: nginx
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:

      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - nginx_logs:/var/log/nginx
    networks:
      - demo_network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

volumes:
  rabbitmq_data:
    name: demo_rabbitmq_data
  rabbitmq_logs:
    name: demo_rabbitmq_logs
  redis_data:
    name: demo_redis_data
  nginx_logs:
    name: demo_nginx_logs

networks:
  demo_network:
    name: demo_network
    driver: bridge
